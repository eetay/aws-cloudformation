AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  RabbitClusterVPC:
    Type: String
  InstanceKeyPair:
    Type: String

#
# CloudFormation resources
#
Resources:

  #
  # Role that our cluster instances will assume to provide access to other AWS resources
  #
  RabbitClusterIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - "ec2.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "RabbitClusterPolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - "autoscaling:DescribeAutoScalingGroups"
              - "autoscaling:DescribeAutoScalingInstances"
              - "ec2:DescribeInstances"
              Resource: '*'

  RabbitClusterInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref RabbitClusterIamRole
      InstanceProfileName: "RabbitClusterInstanceProfile"

  RabbitClusterSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "RabbitClusterSG"
      GroupDescription: "Rabbit Cluster Instances Security Group"
      VpcId: !Ref RabbitClusterVPC
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '4369'
        ToPort: '4369'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '5672'
        ToPort: '5672'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '15672'
        ToPort: '15672'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '25672'
        ToPort: '25672'
        CidrIp: 0.0.0.0/0

  RabbitClusterScalingLaunchConfiguration:
    # example: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-iaminstanceprofile
    DependsOn: RabbitClusterSG
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      ImageId: "ami-cfe4b2b0"
      SecurityGroups:
      - Fn::GetAtt:
        - RabbitClusterSG
        - GroupId
      InstanceType: "t2.micro"
      InstanceMonitoring: true
      LaunchConfigurationName: RabbitClusterScalingLaunchConfiguration
      KeyName: !Ref InstanceKeyPair
      UserData:
        Fn::Base64: "Eetay User Data From CloudFormation"
      BlockDeviceMappings:
      - Ebs:
          # SnapshotId: "snap-07ad5635357af8b3e"
          VolumeType: "gp2"
          # VolumeSize: 8
          DeleteOnTermination: true
        DeviceName: "/dev/xvda"

  RabbitClusterInstanceTemplate:
    DependsOn: RabbitClusterSG
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateName: String
      LaunchTemplateData:
        # NetworkInterfaces:
        # - Description: "eth0"
        #   DeleteOnTermination: true
        #   DeviceIndex: 0
        #   AssociatePublicIpAddress: false
        BlockDeviceMappings:
        - Ebs:
            SnapshotId: "snap-07ad5635357af8b3e"
            VolumeType: "gp2"
            # VolumeSize: 8
            DeleteOnTermination: true
          DeviceName: "/dev/xvda"
        SecurityGroups:
        - "RabbitClusterSG"
        UserData: "Eetay"
        IamInstanceProfile:
          Name: "RabbitClusterInstanceProfile"
        ImageId: "ami-cfe4b2b0"
        KeyName: !Ref InstanceKeyPair
        InstanceType: "t2.micro"
        Monitoring:
          Enabled: true


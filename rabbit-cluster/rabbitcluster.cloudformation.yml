AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  InstanceKeyPair:
    Type: String
  S3Templates:
    Type: String
    Description: 's3:// path where temporary templates reside'

#
# CloudFormation resources
#
Resources:
  RabbitClusterVPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 'https://s3.amazonaws.com/samanage-sandbox-cim-artifacts/RabbitClusterStack/vpc.cloudformation.yml'  #!Sub '{S3Templates}/vpc.cloudformation.yml'
      Parameters:
        BastionKeyPair: EetayLaptop

  #
  # Role that our cluster instances will assume to provide access to other AWS resources
  #
  RabbitClusterIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - "ec2.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "RabbitClusterPolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - "autoscaling:DescribeAutoScalingGroups"
              - "autoscaling:DescribeAutoScalingInstances"
              - "ec2:DescribeInstances"
              Resource: '*'

  RabbitClusterInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref RabbitClusterIamRole
      InstanceProfileName: "RabbitClusterInstanceProfile"

  RabbitClusterSG2:
    DependsOn: RabbitClusterVPC
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "RabbitClusterSG2"
      GroupDescription: "Rabbit Cluster Instances Security Group"
      VpcId: !GetAtt RabbitClusterVPC.Outputs.VpcId
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !GetAtt RabbitClusterVPC.Outputs.VpcCidrBlock
      - IpProtocol: tcp
        FromPort: '4369'
        ToPort: '4369'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '5672'
        ToPort: '5672'
        CidrIp: !GetAtt RabbitClusterVPC.Outputs.VpcCidrBlock
      - IpProtocol: tcp
        FromPort: '15672'
        ToPort: '15672'
        CidrIp: !GetAtt RabbitClusterVPC.Outputs.VpcCidrBlock
      - IpProtocol: tcp
        FromPort: '25672'
        ToPort: '25672'
        CidrIp: !GetAtt RabbitClusterVPC.Outputs.VpcCidrBlock

  RabbitClusterScalingLaunchConfiguration2:
    # example: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-iaminstanceprofile
    DependsOn: RabbitClusterSG2
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: "RabbitClusterInstanceProfile"
      AssociatePublicIpAddress: true
      # ImageId: "ami-cfe4b2b0" # AWS linux
      # ImageId: "ami-0682fcf8a18f7dcb7" # rabbit-1
      ImageId: "ami-0bc107842ebeeb7c0" # RabbitMQ-3.7.7
      SecurityGroups:
      - Fn::GetAtt:
        - RabbitClusterSG2
        - GroupId
      InstanceType: "t2.micro"
      InstanceMonitoring: true
      LaunchConfigurationName: RabbitClusterScalingLaunchConfiguration2
      KeyName: !Ref InstanceKeyPair
      UserData:
        Fn::Base64:
          Fn::Join:
          - "\n"
          - - "#!/bin/bash -x"
            - "echo '' > /etc/rabbitmq/rabbitmq.conf"
            - "echo 'cluster_formation.peer_discovery_backend = rabbit_peer_discovery_aws' >> /etc/rabbitmq/rabbitmq.conf"
            - "echo 'cluster_formation.aws.region = us-east-1' >> /etc/rabbitmq/rabbitmq.conf"
            - "echo 'cluster_formation.aws.use_autoscaling_group = true' >> /etc/rabbitmq/rabbitmq.conf"
            - "echo 'log.file.level = debug' >> /etc/rabbitmq/rabbitmq.conf"
            - "echo 'log.console.level = debug' >> /etc/rabbitmq/rabbitmq.conf"
            - "sudo rm -f /var/log/rabbitmq/*"
            - "sudo service rabbitmq-server restart"
            - "sleep 3"
            - "rabbitmqctl add_user root root"
            - "rabbitmqctl set_permissions -p / root  '.*' '.*' '.*'"
            - "rabbitmqctl set_user_tags root administrator"
      BlockDeviceMappings:
      - Ebs:
          # SnapshotId: "snap-07ad5635357af8b3e"
          VolumeType: "gp2"
          # VolumeSize: 8
          DeleteOnTermination: true
        DeviceName: "/dev/xvda"

  RabbitClusterLB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      CrossZone: true
      LoadBalancerName: "RabbitClusterLB"
      HealthCheck:
        HealthyThreshold: '10'
        Interval: '30'
        Target: "TCP:5672" # "HTTP:15672/api/healthchecks/node"
        Timeout: "5"
        UnhealthyThreshold: '2'
      Listeners:
      - LoadBalancerPort: '22'
        InstancePort: '22'
        Protocol: "TCP"
      - LoadBalancerPort: '5672'
        InstancePort: '5672'
        Protocol: "TCP"
      - LoadBalancerPort: '15672'
        InstancePort: '15672'
        Protocol: "TCP"
      Scheme: "internal"
      # Scheme: "internet-facing"
      SecurityGroups:
        - !Ref RabbitClusterSG2
      Subnets:
        Fn::Split:
          - ","
          - !GetAtt RabbitClusterVPC.Outputs.PublicSubnets

  RabbitClusterInstancesASG1:
    # UpdatePolicy:
    #   AutoScalingRollingUpdate:
    #     MinInstancesInService: "1"
    #     MaxBatchSize: "1"
    #     PauseTime: "PT12M5S"
    #     WaitOnResourceSignals: "true"
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: "RabbitClusterInstancesASG1"
      MinSize: "3"
      MaxSize: "4"
      LoadBalancerNames:
      - "RabbitClusterLB"
      # AvailabilityZones:
      #   Fn::GetAZs: !Ref "AWS::Region"
      LaunchConfigurationName: !Ref "RabbitClusterScalingLaunchConfiguration2"
      VPCZoneIdentifier:
        Fn::Split:
          - ","
          - !GetAtt RabbitClusterVPC.Outputs.PublicSubnets
      Tags:
      - Key: "Name"
        Value: "RabbitClusterInstancesASG Instance"
        PropagateAtLaunch: true

